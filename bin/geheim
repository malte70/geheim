#!/bin/bash
#
# Copyright (c) 2015 Malte Bublitz, https://malte-bublitz.de
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
# 
# 1. Redistributions of source code must retain the above copyright notice, this
#  list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright notice,
#  this list of conditions and the following disclaimer in the documentation
#  and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
# FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR
# AND/OR CONTRIBUTORS OF WindowsInfo BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 

DATA="${GEHEIM_DATA-$HOME/.geheim.db}"
DEFAULT_KEY="$(grep default-key $HOME/.gnupg/gpg.conf | awk '{ print $2 }')"
if [ -n $DEFAULT_KEY ]
then
	DEFAULT_KEY=" -r $DEFAULT_KEY"
fi

action_list() {
	gpg --decrypt --quiet "$DATA" | tar tO 2>&1 | sed 's@^@/@g' | grep -v '/$'
}

action_get_node() {
	NODE="${1:1:${#1}}"
	[[ ${1:0:1} != "/" ]] && NODE="$1"
	if gpg --decrypt --quiet "$DATA" | tar xO "$NODE" 2>/dev/null
	then
		true
	else
		echo "$0: Node /$NODE not found." >&2
		exit 2
	fi
}
action_remove_node() {
	NODE="${1:1:${#1}}"
	[[ ${1:0:1} != "/" ]] && NODE="$1"
	gpg --decrypt --quiet <"$DATA" > "$DATA.tar"
	rm "$DATA"
	tar -f "$DATA.tar" --delete "$NODE"
	gpg --encrypt --quiet $DEFAULT_KEY <"$DATA.tar" >"$DATA"
}
action_add_node() {
	rm -rf "$DATA.dir"
	mkdir "$DATA.dir"
	gpg --decrypt --quiet <"$DATA" | tar -x -f - -C "$DATA.dir"
	mkdir -p "${DATA}.dir$(dirname $1)"
	touch "${DATA}.dir$1"
	echo "Now type the content for $1."
	while read line
	do
		echo $line >> "${DATA}.dir$1"
	done
	cd "${DATA}.dir"
	rm "$DATA"
	tar -c -f - * | gpg --encrypt --quiet $DEFAULT_KEY >"$DATA"
	rm -rf "${DATA}.dir"
}

usage() {
	echo -e "Usage: $0 <action> [<parameters>]"
	echo -e "Available actions:"
	echo -e "\tlist         List available Nodes"
	echo -e "\tget <node>   Get a node's contents"
	echo -e "\trm <node>    Remove a node"
	echo -e "\tadd <node>   Add a node."
}
main() {
	if [ $# -eq 0 ]; then
		usage
		exit 0
	fi
	case "$1" in
		"list")
			action_list
			;;
		"get")
			action_get_node $2
			;;
		"rm")
			action_remove_node $2
			;;
		"add")
			action_add_node $2
			;;
		*)
			usage >&2
			exit 1
			;;
	esac
}

main $@
